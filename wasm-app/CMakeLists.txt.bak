# Copyright (C) 2022 Intel Corporation.  All rights reserved.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

cmake_minimum_required(VERSION 3.0)
project(wasm-app)

set (WAMR_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../..)

if (APPLE)
    set (HAVE_FLAG_SEARCH_PATHS_FIRST 0)
    set (CMAKE_C_LINK_FLAGS "")
    set (CMAKE_CXX_LINK_FLAGS "")
endif ()

set (CMAKE_SYSTEM_PROCESSOR wasm32)

if (NOT DEFINED WASI_SDK_DIR)
    set (WASI_SDK_DIR               "/opt/wasi-sdk")
endif ()
set (CMAKE_C_COMPILER_TARGET        "wasm32-wasi")
set (CMAKE_CXX_COMPILER               "${WASI_SDK_DIR}/bin/clang++")
# set (CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS} -O0 -fno-exceptions -z stack-size=409600 -Wl,--initial-memory=2147483648")
set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -O3 -fno-exceptions -z stack-size=409600")

# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS}  -I/usr/local/include -I/home/yanxiang/Desktop/WamrTest-probuf/include")
set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS}  -I/usr/local/include -I/home/yanxiang/Desktop/wasmX/include /home/yanxiang/Desktop/wasmX/protobuf-wasm/lib/libprotobuf-c.a")
# 因为__assert_fail函数的原因，暂时不能nostdlib编译
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--strip-all")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=malloc")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=free")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=printPersonInfo")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=printListString")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=printString")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=add")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=proto_arr_sum")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=my_arr_sum")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=my_str_hash")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=proto_str_hash")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=proto_distance")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=my_distance")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=my_split")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=proto_split")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=my_bmi")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=proto_bmi")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=map_test")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=bitsery_arr_sum")
# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--export=bitsery_str_hash")









# set (CMAKE_CXX_FLAGS                  "${CMAKE_CXX_FLAGS} -Wl,--allow-undefined")

add_executable(snapshot.wasm test_snapshot/test_snapshot.cc)
target_link_libraries(snapshot.wasm)
